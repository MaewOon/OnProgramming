name: workflow
on: push
jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install deps
        run: |
          sudo apt-get -y install \
            python3-pip clang-format \
            build-essential gdb cmake cppcheck
          pip3 install pre-commit cmakelang
      - name: lint
        run: pre-commit run --all-files
  test:
    needs: [lint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: test
        run: |
          git submodule update --init --recursive --init --recursive
          mkdir build
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON \
          -DENABLE_COVERAGE=OFF \
          -DENABLE_SANITIZER_ADDRESS=OFF -DENABLE_SANITIZER_LEAK=OFF \
          -DENABLE_SANITIZER_UNDEFINED_BEHAVIOR=OFF
          cmake --build build --target all -- -j8
          ctest --test-dir build --verbose
  cpp_static_analysis:
    needs: [test]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: cpp_static_analysis
        run: |
          git submodule update --init --recursive
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cmake --build build --target all -- -j8
          sudo ./cpp/static_analysis/install_clang_tidy.sh
          python3 cpp/static_analysis/run-clang-tidy.py -p build -config-file=cpp/static_analysis/.clang-tidy -source-filter="^.*dsa.*$"
  # deploy:
  #   needs: [coverage]
  #   runs-on: ubuntu-22.04
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Build artifacts
  #       run: |
  #         mkdir build && cd build
  #         cmake -DBUILD_TYPE=Release ..  && cmake --build .
  #         cpack
  #     - name: Upload static artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: static_artifacts
  #         path: build/*.deb
  # coverage:
  #   needs: cpp_static_analysis
  #   runs-on: ubuntu-22.04
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install deps
  #       run: sudo apt-get -y install lcov
  #     - name: Build
  #       run: |
  #         mkdir build
  #         cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_COVERAGE=ON
  #         cmake --build build --target all -- -j8
  #     - name: Generate report
  #       run: |
  #         lcov -c -d build -o build/main_coverage.info
  #         genhtml /build/main_coverage.info --output-directory build/lcovout
