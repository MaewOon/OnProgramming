/**
 * @file bank.cpp
 * @author your name (you@domain.com)
 * @brief Необходимо спроектировать банк.
 *
 * 1. Background
 *
 * Банк -- финансовая система, которая предоставляет разные финансовые сервисы,
 * включая счета, кредитные карты и кредиты.
 * Банк работает с клиентами. Клиенты должны открыть счет, чтобы пользоваться сервисами банка.
 * Клиенты могут перечислять деньги на счет или снимать деньги со счета.
 *
 * 2. Possible questions
 * В этой секции необходимо избавиться от неоднозначности, чтобы задача была понятной.
 * Можно задать уточняющие вопросы. Правило 6 W (who, what, where, when, how, why)
 *
 * - Кто пользователь банка?
 * - Что делает банк? Что делает клиент?
 * - Какие финансовые сервисы предоставляет банк?
 * - Должны ли пользователи открывать счет? Должен ли банк обрабатывать счета?
 * - Из чего состоит банк? Имеет ли банк кассиров? Это физический банк или онлайн банк?
 * - Банк имеет охрану?
 * - Должен ли банк брать процент за свои услуги? Есть ли в банке хранилище?
 * - Банк находится в одном месте или имеет несколько отделений?
 *
 * 3. Requirements
 *
 * - Что делает банк? Банк предоставляет финансовые услуги (открытие счета, пополнение баланса, снятие денег со счета)
 * - Пользователем банка является клиент. Это человек. Клиент может завести счет, пополнить счет, снять деньги со счета.
 * - Должны ли пользователи открывать счет? Клиент обязан открыть счет, чтобы пользоваться услугами банка.
 * - Должен ли банк обрабатывать счета? Да, банк обрабатывает счета. Для обработки счетов используются кассиры.
 * - Кассир предоставляют услуги банка для клиента. Каждая услуга записывается в лог, который связан с кассиром и
 * клиентом.
 * - Из чего состоит банк? Имеет ли банк кассиров? Это физический банк или онлайн банк? - Банк имеет несколько
 * отделений. В каждом отделении есть кассир.
 * - Банк имеет охрану? Да, но в этом примере нужно уделить внимание предоставлению услуг банка. Охрана выходит за рамки
 * примера.
 * - Должен ли банк брать процент за свои услуги? Нет, в данном примере банк не берет процент.
 * - Есть ли в банке хранилище? Да. В конце каждого дня кассиры приносят деньги в хранилище.
 *
 * Можно убрать вопросы и получить конкретное описание задачи.
 *
 * Необходимо спроектировать банк. Банк предоставляет финансовые услуги (открытие счета, пополнение баланса, снятие
 * денег со счета). Банк имеет несколько отделений. В каждом отделении есть кассир. Пользователем банка является клиент.
 * Клиент может завести счет, пополнить счет, снять деньги со счета. Клиент обязан открыть счет, чтобы пользоваться
 * услугами банка. Банк обрабатывает счета. Для операций со счетом используются кассиры. Кассир предоставляют услуги
 * банка для клиента. Каждая услуга записывается в лог, который связан с кассиром и клиентом. В конце каждого дня
 * кассиры приносят деньги в хранилище банка. В этом примере нужно уделить внимание предоставлению услуг банка. Охрана
 * выходит за рамки примера. В данном примере банк не берет процент.
 *
 * 4. High level design. Abstraction.
 *
 * В этой секции необходимо определить основные обьекты системы. Определить связи обьектов. Определить взаимодействие
 * обьектов.
 *
 * - Банк предоставляет финансовые услуги (открытие счета, пополнение, снятие).
 * Введем базовый класс Transaction, от которого будут наследоваться OpenAccount, Deposit, Withdraw.
 * - Account содержит информацию о балансе клиента и его ID.
 * - Teller содержит ID.
 * - Bank имеет несколько отделений BankBranch и одну систему хранения и обработки счетов, углуг банка BankSystem.
 * Клиент может пользоваться услугами в нескольких отделениях банка, поэтому информацию о счета должна храниться в
 * BankSystem.
 *
 * Основные обьекты: Transaction, OpenAccount, Deposit, Withdraw, Account, Teller, BankBranch, Bank, BankSystem.
 * Взаимодействие обьектов:
 * -
 *
 * @version 0.1
 * @date 2023-06-04
 *
 * @copyright Copyright (c) 2023
 *
 */
